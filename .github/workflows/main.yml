# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64,amd64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
   
      - name: Build and push jupyter Docker image
        id: docker_build_amd64
        uses: docker/build-push-action@v2.4.0
        with:
          context: .
          file: ${{context}}docker/jupyter/Dockerfile
          tags: codecentric/from-jupyter-to-production-jupyter:latest
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          platforms: linux/amd64,linux/arm64
      - name: Build and push dagster Docker image
        id: docker_build_amd64
        uses: docker/build-push-action@v2.4.0
        with:
          context: .
          file: ${{context}}docker/dagster/Dockerfile
          tags: codecentric/from-jupyter-to-production-dagster:latest
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          platforms: linux/amd64,linux/arm64
      - name: Build and push mlflow Docker image
        id: docker_build_amd64
        uses: docker/build-push-action@v2.4.0
        with:
          context: .
          file: ${{context}}docker/mlflow/Dockerfile
          tags: codecentric/from-jupyter-to-production-mlflow:latest
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          platforms: linux/amd64,linux/arm64

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
